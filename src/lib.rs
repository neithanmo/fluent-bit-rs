/* automatically generated by rust-bindgen */

pub const FLB_ERROR: u32 = 0;
pub const FLB_OK: u32 = 1;
pub const FLB_RETRY: u32 = 2;
pub const FLB_PROXY_OUTPUT_PLUGIN: u32 = 2;
pub const FLB_PROXY_GOLANG: u32 = 11;

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct flb_plugin_proxy_def {
    pub type_: ::std::os::raw::c_int,
    pub proxy: ::std::os::raw::c_int,
    pub flags: ::std::os::raw::c_int,
    pub name: *mut ::std::os::raw::c_char,
    pub description: *mut ::std::os::raw::c_char,
}

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct flb_api {
    pub output_get_property: ::std::option::Option<
        unsafe extern "C" fn(
            arg1: *mut ::std::os::raw::c_char,
            arg2: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_char,
    >,
}

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct flb_plugin_proxy_context {
    pub remote_context: *mut ::std::os::raw::c_void,
}

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct flbgo_output_plugin {
    pub __: *mut ::std::os::raw::c_void,
    pub api: *mut flb_api,
    pub o_ins: *mut flb_output_instance,
    pub context: *mut flb_plugin_proxy_context,
}

extern "C" {
    pub fn output_get_property(
        key: *mut ::std::os::raw::c_char,
        plugin: *mut ::std::os::raw::c_void,
    ) -> *mut ::std::os::raw::c_char;
}

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct flb_output_instance {
    pub _address: u8,
}
